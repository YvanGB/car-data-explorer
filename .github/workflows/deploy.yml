name: CI/CD Pipeline
on:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Log in to Amazon ECR
      env:
        AWS_REGION: eu-west-3
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      run: |
        # echo ${{ secrets.AWS_ACCESS_KEY_ID }} | docker login -u AWS -p ${{ secrets.AWS_SECRET_ACCESS_KEY }} $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
        aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
    - name: Build, tag, and push Docker image
      env:
        AWS_REGION: eu-west-3
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        IMAGE_REPO_NAME: node-app
        IMAGE_TAG: latest
      run: |
        docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
        docker tag $IMAGE_REPO_NAME:$IMAGE_TAG
        $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG docker push
        $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
    - name: Deploy to Amazon ECS
      env:
        AWS_REGION: eu-west-3
        AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        ECS_CLUSTER: node-app-cluster
        ECS_SERVICE: node-app-service
        CONTAINER_NAME: node-app
        IMAGE_TAG: latest
      run: |
        aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment
